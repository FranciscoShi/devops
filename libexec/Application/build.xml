<?xml version="1.0" encoding="UTF-8" ?>
<!--
     Homepage: http://www.netkiller.cn
Author: neo <netkiller@msn.com>
Date: 2015-12-07
-->
<project name="api.netkiller.cn" default="compile" basedir=".">

	<property file="build.properties" />
	<property name="git.repository" value="git@58.96.19.18:netkiller.cn/api.netkiller.cn.git" />
	<!--
	     	<property name="git.branch" value="master" />
	-->
	<property name="git.branch" value="development" />
	<property name="git.merge" value="development" />

	<property name="remote" value="www@www.netkiller.cn" />
	<property name="destination" value="/www/netkiller.cn/api.netkiller.cn" />

	<property name="project.repository" value="repository" />
	<property name="project.dir" value="${project.repository}" />
	<property name="project.src" value="${project.dir}/src" />
	<property name="project.build" value="bin" />
	<property name="project.config" value="config" />
	<property name="project.exclude" value="/dev/null" />
	<property name="project.log" value="log" />
	<property name="project.package" value="${ant.project.name}-1.0.0.jar" />
	<property name="project.version" value="0.0.1" />

	<property name="backup.dir" value="backup" />
	<property name="receive.timepoint" value="2015-12-04.17:46:35" />


	<property name="maven.home" value="/srv/apache-maven" />

	<property name="build.sysclasspath" value="last" />
	<property environment="env" />

	<path id="classpath">
		<fileset dir="${env.JAVA_HOME}/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${project.dir}/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${project.build}" includes="*.jar" />
	</path>

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<!-- echo message="git @{command}" / -->
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="rsync">
		<attribute name="option" default="auzv" />
		<attribute name="src" default="" />
		<attribute name="dest" default="" />
		<element name="args" optional="true" />
		<sequential>
			<!-- echo message="rsync @{option} ${src} ${dest}" / -->
			<exec executable="rsync">
				<arg value="@{option}" />
				<args />
				<arg value="@{src}" />
				<arg value="@{dest}" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="ssh">
		<attribute name="host" />
		<attribute name="command" />
		<attribute name="keyfile" default="~/.ssh/id_rsa" />
		<element name="args" optional="true" />
		<sequential>
			<exec executable="ssh">
				<arg value="@{host}" />
				<!-- arg value="-i @{keyfile}" / -->
				<args />
				<arg value="@{command}" />
			</exec>
		</sequential>
	</macrodef>

	<target name="dir.check">
		<condition property="dir.exists">
			<available file="${project.dir}" type="dir" />
		</condition>
	</target>

	<target name="clone" depends="dir.check" unless="dir.exists">
		<echo>clone</echo>
		<git command="clone">
			<args>
				<arg value="${git.repository}" />
				<arg value="${project.dir}" />
			</args>
		</git>
	</target>

	<target name="branch" depends="clone" if="dir.exists">

		<git command="checkout" dir="${project.dir}">
			<args>
				<arg value="-f" />
				<arg value="${git.branch}" />
			</args>
		</git>
	</target>

	<target name="pull" depends="branch" if="dir.exists">
		<echo>${project.dir} exists</echo>
		<git command="clean" dir="${project.dir}">
			<args>
				<arg value="-df" />
			</args>
		</git>

		<git command="reset" dir="${project.dir}">
			<args>
				<arg value="HEAD" />
				<arg value="--hard" />
			</args>
		</git>

		<git command="pull" dir="${project.dir}" />
	</target>

	<target name="revert" depends="pull" if="dir.exists">

		<git command="checkout" dir="${project.dir}">
			<args>
				<arg value="-f" />
				<arg value="${git.revert}" />
			</args>
		</git>
	</target>

	<target name="fetch" depends="dir.check" if="dir.exists">
		<git command="clean" dir="${project.dir}">
			<args>
				<arg value="-df" />
			</args>
		</git>

		<git command="reset" dir="${project.dir}">
			<args>
				<arg value="HEAD" />
				<arg value="--hard" />
			</args>
		</git>

		<git command="pull" dir="${project.dir}">
			<args>
				<arg value="--all" />
			</args>
		</git>

		<git command="checkout" dir="${project.dir}">
			<args>
				<arg value="-f" />
				<arg value="${git.merge}" />
			</args>
		</git>

		<git command="pull" dir="${project.dir}">
			<args>
				<arg value="--all" />
			</args>
		</git>

		<git command="checkout" dir="${project.dir}">
			<args>
				<arg value="-f" />
				<arg value="${git.branch}" />
			</args>
		</git>

		<!--
		     		<git command="fetch" dir="${project.dir}">
			<args>
				<arg value="-v" />
				<arg value="origin" />
			</args>
		</git>		
		-->
	</target>

	<target name="merge" depends="fetch" if="dir.exists">
		<git command="merge" dir="${project.dir}">
			<args>
				<arg value="remotes/origin/${git.merge}" />
			</args>
		</git>

	</target>
	<target name="push" depends="merge" if="dir.exists">
		<git command="push" dir="${project.dir}">
			<args>
				<arg value="--progress" />
				<arg value="origin" />
				<arg value="${git.branch}:${git.branch}" />
			</args>
		</git>

	</target>

	<target name="init" depends="">

		<mkdir dir="${project.build}" />
		<mkdir dir="${project.log}" />

		<copy todir="${project.build}" overwrite="true">
			<fileset dir="${project.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<copy todir="${project.build}" overwrite="true">
			<fileset dir="${project.config}" includes="**/*" />
		</copy>


	</target>


	<target name="compile" depends="init">
		<echo message="JAVA_HOME is set to = ${env.JAVA_HOME}" />
		<echo message="CATALINA_HOME is set to = ${env.CATALINA_HOME}" />
		<javac srcdir="${project.src}" destdir="${project.build}" listfiles="true" debug="true">
			<classpath refid="classpath" />
			<include name="**/*.java" />
			<exclude name="**/*.xml" />
			<exclude name="**/*.properties" />
		</javac>
	</target>


	<target name="trial" depends="compile">
		<tstamp>
			<format property="timepoint" pattern="yyyy-MM-dd.HH:mm:ss" locale="cn,CN" />
		</tstamp>
		<rsync option="-azv" src="${project.build}/" dest="${remote}:${destination}">
			<args>
				<arg value="--dry-run" />
				<arg value="--delete" />
				<arg value="--backup" />
				<arg value="--backup-dir=~/${backup.dir}/${timepoint}" />
				<arg value="--log-file=log/${ant.project.name}.${timepoint}.trial.log" />
				<arg value="--exclude-from=${project.exclude}" />
			</args>
		</rsync>
	</target>

	<target name="deploy" depends="compile">
		<tstamp>
			<format property="timepoint" pattern="yyyy-MM-dd.HH:mm:ss" locale="cn,CN" />
		</tstamp>
		<rsync option="-azv" src="${project.build}/" dest="${remote}:${destination}">
			<args>
				<arg value="--delete" />
				<arg value="--backup" />
				<arg value="--backup-dir=~/${backup.dir}/${ant.project.name}/${timepoint}" />
				<arg value="--log-file=log/${ant.project.name}.${timepoint}.log" />
				<arg value="--exclude-from=${project.exclude}" />
			</args>
		</rsync>
	</target>

	<target name="package" depends="compile">
		<jar jarfile="${project.package}" basedir="${project.build}" />
	</target>

	<target name="backup" depends="">
		<tstamp>
			<format property="TIMEPOINT" pattern="yyyy-MM-dd.HH:mm:ss" locale="cn,CN" />
		</tstamp>
		<echo>the backup directory is ${TIMEPOINT}.</echo>
		<mkdir dir="${backup.dir}/${TIMEPOINT}" />
		<rsync option="-auzv" src="${remote}:${destination}" dest="${backup.dir}/${TIMEPOINT}">
		</rsync>
	</target>

	<target name="receive" depends="">
		<echo>the receive directory is ${receive.timepoint}.</echo>
		<rsync option="-auzv" src="${backup.dir}/${receive.timepoint}" dest="${remote}:${destination}" />
	</target>

	<target name="stop" depends="">
		<!-- ssh host="${remote}" command="${catalina.home}/bin/catalina.sh stop -force" keyfile="~/.ssh/id_rsa" / -->
		<ssh host="${remote}" command="${catalina.home}/bin/shutdown.sh" />
	</target>
	<target name="start" depends="">
		<ssh host="${remote}" command="${catalina.home}/bin/startup.sh" keyfile="~/.ssh/id_rsa" />
	</target>
	<target name="restart">
		<ant target="stop" />
		<ant target="kill" />
		<ant target="start" />
		<ant target="catalina" />
	</target>
	<target name="status" depends="">
		<ssh host="${remote}" command="ps ax | grep ${catalina.home} | grep -v grep" />
	</target>
	<target name="kill" depends="">
		<ssh host="${remote}" command="pkill -9 -f ${catalina.home}" />
		<ant target="status" />
	</target>
	<target name="catalina">
		<ssh host="${remote}" command="tail -f ${catalina.home}/logs/catalina.out" />
	</target>
	<target name="run" depends="">
		<java classname="test.ant.HelloWorld" classpath="${hello}" />
	</target>
	<target name="clean">
		<delete dir="${project.build}" />
		<delete file="${project.package}" />
	</target>
	<target name="reset" depends="clean">
		<delete dir="${project.dir}" />
	</target>
</project>
